.c-form-group {
  display: flex;
  flex: 0 0 auto;
  flex-flow: row wrap;
  align-items: center;

  &.vertical {
    flex-direction: column;
    align-content: flex-start;
    .c-checkbox + .c-checkbox,
    .c-radio + .c-radio {
      margin-left: 0;
      margin-top: 0.5rem;
    }
  }

  label,
  span {
    display: inline-flex;
    align-items: center;
    cursor: pointer;
  }

  .c-checkbox + .c-checkbox,
  .c-radio + .c-radio {
    margin-left: 0.75rem;
  }
}

// checkbox & radio base
.c-checkbox,
.c-radio {
  display: flex;
  align-self: flex-start;
  align-items: center;
  justify-content: center;
  cursor: pointer;

  input[type='checkbox'],
  input[type='radio'] {
    position: absolute;
    opacity: 0;

    & + label::before,
    & + span::before {
      display: inline-block;
      width: 1.25em;
      height: 1.25em;
      margin-right: 0.25em;
      background-repeat: no-repeat;
      background-size: contain;
      content: '';
    }
    &:disabled + label,
    &:disabled + span {
      opacity: 0.6;
      cursor: not-allowed;
    }
  }
}

// checkbox
.c-checkbox {
  input[type='checkbox'] {
    & + label::before,
    & + span::before {
      background-image: url('~@src/assets/image/check_box_blank.svg?fill=#{$base-color} path');
    }
    &:checked + label::before,
    &:checked + span::before {
      background-image: url('~@src/assets/image/check_box.svg?fill=#{$base-color} path');
    }
  }
}

// radio
.c-radio {
  input[type='radio'] {
    & + label::before,
    & + span::before {
      background-image: url('~@src/assets/image/radio_button_unchecked.svg?fill=#{$base-color} path');
    }
    &:checked + label::before,
    &:checked + span::before {
      background-image: url('~@src/assets/image/radio_button_checked.svg?fill=#{$base-color} path');
    }
  }
}

// input
.c-input,
.c-textarea {
  display: inline-block;
  padding: $input-padding-y $input-padding-x;
  margin: $input-margin auto;
  line-height: 1.5;
  background-color: $input-bg;
  border: 1px solid $input-border-color;
  border-radius: $input-border-radius;
  transition: box-shadow 0.1s ease;

  &:focus {
    border-color: $primary-color;
    box-shadow: $input-focus-size rgba($primary-color, 0.5);
    outline: 0;
  }

  &::placeholder {
    color: $input-placeholder-color;
    opacity: 1;
  }

  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    opacity: 1;
  }
}

.c-input {
  height: $input-height;
}
